mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, visitor_2019_million), y=visitor_2019_million)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors (in million)",
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=visitor_2019_million),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90)) +
plot_annotation(
title="Top 10 Destinations by Visitors in 2019",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
)
# Create density plot for displaying temperature distribution
# Temp for dec to feb
dec_feb <- ggplot(data, aes(x=dec_feb_temp)) +
geom_density(color="white", fill="#F8D664", alpha=0.5) +
labs(x="Dec. to Feb. Avg Temp (째F)",
y="") +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")
)
# Temp for jun to aug
jun_aug <- ggplot(data, aes(x=jun_aug_temp)) +
geom_density(color="white", fill="#F8D664", alpha=1) +
labs(x="Jun. to Aug. Avg Temp (째F)",
y="") +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")
)
# Patchwork
plot <- (dec_feb + jun_aug) +
plot_annotation(
title="Distribution of the Average Temperature",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face="bold"))
)
plot
# Find unique values of climate_type
data$climate_type <- tolower(data$climate_type)
# Count cities of each climate type
climate_group <- data %>%
group_by(climate_type) %>%
summarize(count=n()) %>%
arrange(desc(count))
# Define colors
my_colors <- c("#fcf1cc", "#fae7a5", "#f9dc7e", "#f7d257", "#f5c830",
"#f2bc0a", "#ca9e09", "#a37f07", "#7c6105", "#554303")
# Create a bar chart
ggplot(climate_group, aes(x = reorder(climate_type, count), y = count)) +
geom_bar(fill = my_colors, stat = "identity") +
coord_flip() +
xlab("") +
ylab("Number of Cities") +
labs(caption="Data Source: Wikipedia") +
geom_text(aes(label=count),
vjust=0.3,
hjust=-0.1,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5)) +
plot_annotation(
title="Distribution of Climate Types",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
)
![](den.png)
# Define the order of the destination types
destination_types <- c("mountain", "beach", "island", "lake", "forest", "desert", "winter sports", "sea sports", "old town", "golf", "hiking", "horseback riding", "lgbtq+")
# Create a stacked bar chart for the proportion of each destination type for each cluster
data %>%
pivot_longer(cols = [11:28], names_to = "destination_type", values_to = "proportion") %>%
# Define the order of the destination types
destination_types <- c("mountain", "beach", "island", "lake", "forest", "desert", "winter sports", "sea sports", "old town", "golf", "hiking", "horseback riding", "lgbtq+")
# calculate the proportion of each destination type for each cluster
data_long <- data %>%
pivot_longer(cols = c(mountain:`lgbtq+`)) %>%
group_by(cluster, name) %>%
summarise(prop = mean(value))
# create a stacked bar chart
ggplot(data_long, aes(x = cluster, y = prop, fill = name)) +
geom_bar(stat = "identity") +
labs(x = "Cluster", y = "Proportion", fill = "Destination type") +
ggtitle("Proportion of Destination Types for Each Cluster") +
theme(plot.title = element_text(hjust = 0.5))
# Define the order of the destination types
destination_types <- c("mountain", "beach", "island", "lake", "forest", "desert", "winter sports", "sea sports", "old town", "golf", "horseback riding", "lgbtq+")
# calculate the proportion of each destination type for each cluster
data_long <- data %>%
pivot_longer(cols = c(mountain:golf, horseback_riding:`lgbtq+`)) %>%
group_by(cluster, name) %>%
summarise(prop = mean(value))
# create a stacked bar chart
ggplot(data_long, aes(x = cluster, y = prop, fill = name)) +
geom_bar(stat = "identity") +
labs(x = "Cluster", y = "Proportion", fill = "Destination type") +
ggtitle("Proportion of Destination Types for Each Cluster") +
theme(plot.title = element_text(hjust = 0.5))
# create a subset of the original dataset with only the 10 most variant variables
most_variant <- data %>%
select(forest, river, desert, volcano, x_sports, nightlife, resort, winter_sports, sea_sports, old_town, golf)
# create a subset of the original dataset with only the 10 most variant variables
most_variant <- data %>%
select(forest, river, desert, volcano, x-sports, nightlife, resort, winter_sports, sea_sports, old_town, golf)
# create a subset of the original dataset with only the 10 most variant variables
most_variant <- data %>%
select(forest, river, desert, volcano, `x-sports`, nightlife, resort, winter_sports, sea_sports, old_town, golf)
# convert the dataset to long format
most_variant_long <- most_variant %>%
pivot_longer(everything(), names_to = "variable", values_to = "value")
# create a custom color palette for the clusters
custom_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# create the facet bar charts
ggplot(most_variant_long, aes(x = variable, fill = as.factor(cluster))) +
geom_bar() +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
scale_fill_manual(values = custom_colors) +
labs(x = "", y = "Frequency") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = "bottom")
# Import data
data <- read_csv("data/data_cluster.csv")
# Create pop-up content
pop_content <- paste("City Name: ", data$city_name, "<br/>",
"Longitude: ", data$longitude, "<br/>",
"Latitude: ", data$latitude, "<br/>")
# Create a leaflet map
leaflet(data) %>%
setView(lng=mean(data$longitude), lat=mean(data$latitude), zoom=2) %>%
addProviderTiles("Stamen.TonerLite") %>%
addCircleMarkers(popup=pop_content, clusterOptions=markerClusterOptions(),
color="#F8D664")
columns(data)
columns(data)
colnames(data)
# create a subset of the original dataset with only the 10 most variant variables
most_variant <- data %>%
select(forest, river, desert, volcano, `x-sports`, nightlife, resort, winter_sports, sea_sports, old_town, golf)
# Import data
data <- read_csv("data/data_cluster.csv")
# Create pop-up content
pop_content <- paste("City Name: ", data$city_name, "<br/>",
"Longitude: ", data$longitude, "<br/>",
"Latitude: ", data$latitude, "<br/>")
# Create a leaflet map
leaflet(data) %>%
setView(lng=mean(data$longitude), lat=mean(data$latitude), zoom=2) %>%
addProviderTiles("Stamen.TonerLite") %>%
addCircleMarkers(popup=pop_content, clusterOptions=markerClusterOptions(),
color="#F8D664")
# Change column names
colnames(data)[10] <- "visitor_2019_million"
colnames(data)[22] <- "winter_sports"
colnames(data)[23] <- "sea_sports"
colnames(data)[24] <- "old_town"
colnames(data)[27] <- "horseback_riding"
colnames(data)[29] <- "climate_type"
colnames(data)[30] <- "hemishpere"
colnames(data)[31] <- "dec_feb_temp"
colnames(data)[32] <- "jun_aug_temp"
colnames(data)[33] <- "near_unesco"
colnames(data)[36] <- "todo_30"
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(visitor_2019_million)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, visitor_2019_million), y=visitor_2019_million)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors (in million)",
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=visitor_2019_million),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90)) +
plot_annotation(
title="Top 10 Destinations by Visitors in 2019",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
)
# Create density plot for displaying temperature distribution
# Temp for dec to feb
dec_feb <- ggplot(data, aes(x=dec_feb_temp)) +
geom_density(color="white", fill="#F8D664", alpha=0.5) +
labs(x="Dec. to Feb. Avg Temp (째F)",
y="") +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")
)
# Temp for jun to aug
jun_aug <- ggplot(data, aes(x=jun_aug_temp)) +
geom_density(color="white", fill="#F8D664", alpha=1) +
labs(x="Jun. to Aug. Avg Temp (째F)",
y="") +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.y=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")
)
# Patchwork
plot <- (dec_feb + jun_aug) +
plot_annotation(
title="Distribution of the Average Temperature",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face="bold"))
)
plot
# Find unique values of climate_type
data$climate_type <- tolower(data$climate_type)
# Count cities of each climate type
climate_group <- data %>%
group_by(climate_type) %>%
summarize(count=n()) %>%
arrange(desc(count))
# Define colors
my_colors <- c("#fcf1cc", "#fae7a5", "#f9dc7e", "#f7d257", "#f5c830",
"#f2bc0a", "#ca9e09", "#a37f07", "#7c6105", "#554303")
# Create a bar chart
ggplot(climate_group, aes(x = reorder(climate_type, count), y = count)) +
geom_bar(fill = my_colors, stat = "identity") +
coord_flip() +
xlab("") +
ylab("Number of Cities") +
labs(caption="Data Source: Wikipedia") +
geom_text(aes(label=count),
vjust=0.3,
hjust=-0.1,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5)) +
plot_annotation(
title="Distribution of Climate Types",
theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
)
# create a subset of the original dataset with only the 10 most variant variables
most_variant <- data %>%
select(forest, river, desert, volcano, `x-sports`, nightlife, resort, winter_sports, sea_sports, old_town, golf)
# convert the dataset to long format
most_variant_long <- most_variant %>%
pivot_longer(everything(), names_to = "variable", values_to = "value")
# create a custom color palette for the clusters
custom_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# create the facet bar charts
ggplot(most_variant_long, aes(x = variable, fill = as.factor(cluster))) +
geom_bar() +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
scale_fill_manual(values = custom_colors) +
labs(x = "", y = "Frequency") +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position = "bottom")
# Create a list of the top 10 most variant variables
top_vars <- c("hiking", "horseback riding", "resort", "golf", "old town", "sea sports", "forest", "river", "winter sports", "desert")
# create a custom color palette for the clusters
custom_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# Create facet bar charts for each of the top variables
p <- ggplot(data = data, aes(x = cluster, fill = cluster)) +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
geom_bar(position = "dodge", color = "black", alpha = 0.8, width = 0.5) +
scale_fill_manual(values = cluster_colors) +
labs(title = "Frequency of Each Cluster for Top 10 Most Variant Variables",
x = "Cluster", y = "Frequency") +
theme_minimal()
# Create a list of the top 10 most variant variables
top_vars <- c("hiking", "horseback riding", "resort", "golf", "old town", "sea sports", "forest", "river", "winter sports", "desert")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# Create facet bar charts for each of the top variables
p <- ggplot(data = data, aes(x = cluster, fill = cluster)) +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
geom_bar(position = "dodge", color = "black", alpha = 0.8, width = 0.5) +
scale_fill_manual(values = cluster_colors) +
labs(title = "Frequency of Each Cluster for Top 10 Most Variant Variables",
x = "Cluster", y = "Frequency") +
theme_minimal()
print(p)
# Create a list of the top 10 most variant variables
top_vars <- c("hiking", "horseback riding", "resort", "golf", "old town", "sea sports", "forest", "river", "winter sports", "desert")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# Create facet bar charts for each of the top variables
p <- ggplot(data = data, aes(x = cluster, fill = cluster)) +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
geom_bar(position = "dodge", color = "black", alpha = 0.8, width = 0.5) +
scale_fill_manual(values = cluster_colors) +
labs(title = "Frequency of Each Cluster for Top 10 Most Variant Variables",
x = "Cluster", y = "Frequency") +
theme_minimal()
p
# Create a list of the top 10 most variant variables
top_vars <- c("hiking", "horseback_riding", "resort", "golf", "old_town", "sea_sports", "forest", "river", "winter_sports", "desert")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# Create facet bar charts for each of the top variables
p <- ggplot(data = data, aes(x = cluster, fill = cluster)) +
facet_wrap(~top_vars, scales = "free_x", ncol = 5) +
geom_bar(position = "dodge", color = "black", alpha = 0.8, width = 0.5) +
scale_fill_manual(values = cluster_colors) +
labs(title = "Frequency of Each Cluster for Top 10 Most Variant Variables",
x = "Cluster", y = "Frequency") +
theme_minimal()
p
# Create a list of the top 10 most variant variables
top_vars <- c("resort", "x-sports", "mountain", "sea_sports", "island", "lake", "volcano", "winter_sports", "desert", "beach")
mean_data <- data %>%
group_by(cluster) %>%
summarize(across(all_of(top_vars), mean))
str(mean_data)
# Convert the data to long format
mean_data_long <- mean_data %>%
pivot_longer(cols = all_of(top_vars), names_to = "variable", values_to = "mean_value")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# Create bar charts for each of the top variables
p <- ggplot(data = mean_data_long, aes(x = cluster, y = mean_value, fill = cluster)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
scale_fill_manual(values = cluster_colors) +
labs(title = "Mean Value of Each Variant Variable for Each Cluster",
x = "Cluster", y = "Mean Value") +
theme_minimal()
p
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# Create bar charts for each of the top variables
p <- ggplot(data = mean_data, aes(x = cluster, y = mean_value, fill = cluster)) +
geom_bar(stat = "identity", color = "black", alpha = 0.8, width = 0.5) +
facet_wrap(~variable, scales = "free_x", ncol = 2) +
scale_fill_manual(values = cluster_colors) +
labs(title = "Mean Value of Each Variant Variable for Each Cluster",
x = "Cluster", y = "Mean Value") +
theme_minimal()
p
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
data_mean$mean_value <- factor(data_mean$mean_value)
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
mean_data$mean_value <- factor(mean_data$mean_value)
# Create a list of the top 10 most variant variables
top_vars <- c("resort", "x-sports", "mountain", "sea_sports", "island", "lake", "volcano", "winter_sports", "desert", "beach")
mean_data <- data %>%
group_by(cluster) %>%
summarize(across(all_of(top_vars), mean))
# Convert the data to long format
mean_data_long <- mean_data %>%
pivot_longer(cols = all_of(top_vars), names_to = "variable", values_to = "mean_value")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
mean_data$mean_value <- factor(mean_data$mean_value)
colnames(mean_dat)
colnames(mean_data)
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# reshape data from wide to long format
mean_data_long <- mean_data %>% pivot_longer(cols = -cluster, names_to = "feature")
# create histograms for each feature
p <- ggplot(mean_data_long, aes(x = value)) +
geom_histogram() +
facet_wrap(~ feature, ncol = 2, scales = "free")
# show plot
p
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# reshape data from wide to long format
mean_data_long <- mean_data %>% pivot_longer(cols = -cluster, names_to = "feature")
# create histograms for each feature
p <- ggplot(mean_data_long, aes(x = cluster, y=value)) +
geom_histogram() +
facet_wrap(~ feature, ncol = 2, scales = "free")
# show plot
p
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# reshape data from wide to long format
mean_data_long <- mean_data %>% pivot_longer(mean_data, -ID, names_to = "feature", values_to = "value")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
# reshape data from wide to long format
mean_data_long <- mean_data %>% pivot_longer(mean_data, -cluster, names_to = "feature", values_to = "value")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data) +
geom_histogram(aes(x=cluster, y=resort))
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data) +
geom_histogram(aes(x=cluster))
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data) +
geom_histogram(aes(x=resort))
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data) +
geom_histogram(resort)
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data) +
geom_histogram(aes(y=resort))
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data) +
geom_histogram(aes(x=resort))
View(mean_data)
View(mean_data)
mean_data
str(mean_data)
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
ggplot(mean_data, aes(x = factor(cluster), y = resort, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "Resort") +
ggtitle("Resort Values by Cluster")
ggplot(mean_data, aes(x = factor(cluster), y = value, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ variable, ncol = 2, scales = "free_y") +
labs(x = "Cluster", y = "Value") +
ggtitle("Values by Cluster")
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
bar1 <- ggplot(mean_data, aes(x = factor(cluster), y = resort, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "Resort") +
ggtitle("Resort Values by Cluster")
bar2 <- ggplot(mean_data, aes(x = factor(cluster), y = `x-sports`, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "X-sports") +
ggtitle("Resort Values by Cluster")
bar1 + bar2
# create a custom color palette for the clusters
cluster_colors <- c("#fcf1cc", "#a37f07", "#f5c830", "#7c6105", "#f9dc7e", "#f2bc0a")
bar1 <- ggplot(mean_data, aes(x = factor(cluster), y = resort, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "Resort") +
ggtitle("Resort Values by Cluster")
bar2 <- ggplot(mean_data, aes(x = factor(cluster), y = `x-sports`, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "X-sports") +
ggtitle("Resort Values by Cluster")
bar3 <- ggplot(mean_data, aes(x = factor(cluster), y = mountain, fill = factor(cluster))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Cluster", y = "mountain") +
ggtitle("Resort Values by Cluster")
(bar1 + bar2)/
bar3
