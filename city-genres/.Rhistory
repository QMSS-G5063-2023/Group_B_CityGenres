axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5)
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=1),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=4),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=10),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5, vjust=-1),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5, vjust=-0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5, vjust=-0.1),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Import data
data <- read_csv("data/all_data.csv")
# Create pop-up content
pop_content <- paste("City Name: ", data$city_name, "<br/>",
"Longitude: ", data$longitude, "<br/>",
"Latitude: ", data$latitude, "<br/>")
# Create a leaflet map
leaflet(data) %>%
setView(lng=mean(data$longitude), lat=mean(data$latitude), zoom=2) %>%
addProviderTiles("Stamen.TonerLite") %>%
addCircleMarkers(popup=pop_content, clusterOptions=markerClusterOptions(),
color="#F8D664"")
# Import data
data <- read_csv("data/all_data.csv")
# Create pop-up content
pop_content <- paste("City Name: ", data$city_name, "<br/>",
"Longitude: ", data$longitude, "<br/>",
"Latitude: ", data$latitude, "<br/>")
# Create a leaflet map
leaflet(data) %>%
setView(lng=mean(data$longitude), lat=mean(data$latitude), zoom=2) %>%
addProviderTiles("Stamen.TonerLite") %>%
addCircleMarkers(popup=pop_content, clusterOptions=markerClusterOptions(),
color="#F8D664")
library(devtools)
devtools::install_github("rstudio/leaflet")
library(leaflet)
library(leaflet.extras)
library(leaflet.extras2)
library(readr)
library(tidyverse)
library(dplyr)
library(RColorBrewer)
library(ggplot2)
library(sf)
library(tmap)
# Import data
data <- read_csv("data/all_data.csv")
# Create pop-up content
pop_content <- paste("City Name: ", data$city_name, "<br/>",
"Longitude: ", data$longitude, "<br/>",
"Latitude: ", data$latitude, "<br/>")
# Create a leaflet map
leaflet(data) %>%
setView(lng=mean(data$longitude), lat=mean(data$latitude), zoom=2) %>%
addProviderTiles("Stamen.TonerLite") %>%
addCircleMarkers(popup=pop_content, clusterOptions=markerClusterOptions(),
color="#F8D664")
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
```
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
# Filter the top 10 cities by number of visitors in 2019
top10 <- data %>%
arrange(desc(`int_visitor_2019 (million)`)) %>%
mutate(rank=row_number()) %>%
filter(rank<=10)
# Create a bar chart
ggplot(top10, aes(x=reorder(city_name, `int_visitor_2019 (million)`), y=`int_visitor_2019 (million)`)) +
geom_bar(stat="identity", fill="#F8D664") +
coord_flip() +
labs(x="",
y="Number of Visitors",
title=element_text("Top 10 Destinations by Visitors in 2019",
face="bold",
size=16),
caption=element_text("Data Source: World Tourism Organization")) +
geom_text(aes(label=`int_visitor_2019 (million)`),
vjust=0.3,
hjust=-0.05,
show.legend=FALSE) +
theme_classic() +
theme(axis.line.y=element_blank(),
axis.line.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
plot.title=element_text(hjust=0.5, vjust=5),
plot.caption=element_text(hjust=0.5),
plot.margin=unit(c(1,-0.1,0,-0.4), "cm")) +
expand_limits(y=c(0,90))
cities <- read.csv("data/all_data.csv", header = TRUE)
ggplot(cities, aes(x=`Dec.Feb.Avg.Temp...F.`)) +
geom_density(fill="steelblue", alpha=0.5) +
xlab("Winter Avg Temp (°F)") +
ylab("Density") +
ggtitle("Distribution of Winter Avg Temp (°F)") +
theme_bw() +
theme(axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank())
data <- read.csv("data/all_data.csv", header = TRUE)
ggplot(data, aes(x=`Dec.Feb.Avg.Temp...F.`)) +
geom_density(fill="steelblue", alpha=0.5) +
xlab("Winter Avg Temp (°F)") +
ylab("Density") +
ggtitle("Distribution of Winter Avg Temp (°F)") +
theme_bw() +
theme(axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank())
data <- read.csv("data/all_data.csv", header = TRUE)
ggplot(data, aes(x=data$Dec.Feb.Avg.Temp..掳F.)) +
geom_density(fill="steelblue", alpha=0.5) +
xlab("Winter Avg Temp (°F)") +
ylab("Density") +
ggtitle("Distribution of Winter Avg Temp (°F)") +
theme_bw() +
theme(axis.line.y = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
axis.text.y = element_blank(), axis.ticks.y = element_blank())
